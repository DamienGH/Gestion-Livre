{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/auth\";\n/**\r\n * Service de protection des composants sensibles => redirection vers l'authentification\r\n */\n\nexport let AuthGuardService = /*#__PURE__*/(() => {\n  class AuthGuardService {\n    constructor(router, angularFireAuth) {\n      this.router = router;\n      this.angularFireAuth = angularFireAuth;\n    }\n    /**\r\n     * Si l'utilisateur n'est pas authentifié ce service le redirige vers la page d'authentification\r\n     * @param authService Le service d'authentification permettant de savoir si l'utilisateur est authentifié\r\n     * @param router\r\n     */\n\n\n    canActivate() {\n      return new Promise((resolve, reject) => {\n        this.angularFireAuth.onAuthStateChanged(user => {\n          if (user) {\n            resolve(true);\n          } else {\n            this.router.navigate(['/auth', 'signin']);\n            resolve(false);\n          }\n        });\n      });\n    }\n\n  }\n\n  AuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n    return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  AuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardService,\n    factory: AuthGuardService.ɵfac\n  });\n  return AuthGuardService;\n})();","map":null,"metadata":{},"sourceType":"module"}