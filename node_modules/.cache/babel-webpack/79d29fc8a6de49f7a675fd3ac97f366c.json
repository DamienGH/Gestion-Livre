{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\n/**\r\n * Service d'authentification, basé sur Firebase\r\n */\n\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(angularFireAuth) {\n      this.angularFireAuth = angularFireAuth;\n      this.userAuthEmail = '';\n    }\n    /**\r\n     * Service de création d'un nouvel utilisateur\r\n     * @param email\r\n     * @param password\r\n     * @returns la Promise de création du User\r\n     */\n\n\n    createNewUser(email, password) {\n      return new Promise((resolve, reject) => {\n        this.angularFireAuth.createUserWithEmailAndPassword(email, password).then(() => {\n          this.userAuthEmail = email;\n          resolve(true);\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n    /**\r\n     * Service d'authentification d'un nouvel utilisateur\r\n     * @param email\r\n     * @param password\r\n     * @returns\r\n     */\n\n\n    signInUser(email, password) {\n      return new Promise((resolve, reject) => {\n        this.angularFireAuth.signInWithEmailAndPassword(email, password).then(() => {\n          this.userAuthEmail = email;\n          resolve(true);\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n    /**\r\n     * Service de déconnexion\r\n     */\n\n\n    signOutUser() {\n      this.angularFireAuth.signOut();\n      this.userAuthEmail = '';\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}