{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Book } from '../../models/book.model';\nimport { BarcodeFormat } from '@zxing/library';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/books.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/google-book-api.service\";\nimport * as i5 from \"@zxing/ngx-scanner\";\n/**\r\n * Composant gérant le formulaire de création d'un livre, le scan du code barre pour retrouver l'ISBN et l'autocomplétion du formulaire grâce à cet ISBN\r\n */\n\nexport let BookFormComponent = /*#__PURE__*/(() => {\n  class BookFormComponent {\n    constructor(formBuilder, booksService, router, googleBookApiService) {\n      this.formBuilder = formBuilder;\n      this.booksService = booksService;\n      this.router = router;\n      this.googleBookApiService = googleBookApiService;\n      this.isbnPattern = /[0-9]{13}/;\n      /**\r\n       * Variables du scanner\r\n       * @todo : peut-être les sortir de là\r\n      */\n\n      this.scanResult = '';\n      this.formatsEnabled = [BarcodeFormat.EAN_13];\n      this.timeBetweenScans = 2000;\n      this.videoConstraints = {\n        width: {\n          min: 1920,\n          ideal: 1920\n        },\n        height: {\n          min: 1080,\n          ideal: 1080\n        },\n        aspectRatio: {\n          ideal: 1.7777777778\n        }\n      };\n    }\n\n    onCodeResult(result) {\n      this.scanResult = result;\n      this.bookForm.get('isbn').setValue(result);\n    }\n    /**\r\n     * Initialisation du composant : initilisation du formulaire\r\n     */\n\n\n    ngOnInit() {\n      this.initForm();\n    }\n    /**\r\n     * Initialisation du formulaire de création d'un livre.\r\n     * Ajout d'une souscription sur le champs ISBN qui réagira en cas d'ISBN correct pour remplir les autres champs du formulaire\r\n     */\n\n\n    initForm() {\n      this.bookForm = this.formBuilder.group({\n        title: ['', Validators.required],\n        subtitle: '',\n        author: ['', Validators.required],\n        isbn: ['', Validators.pattern(this.isbnPattern)],\n        synopsis: ''\n      });\n      this.bookForm.get('isbn').valueChanges.subscribe(typedIsbn => {\n        if (String(typedIsbn).match(this.isbnPattern)) {\n          this.autofillBookForm(typedIsbn);\n        }\n      });\n    }\n    /**\r\n     * Sauvegarde du livre renseigné dans le formulaire\r\n     * Puis navigation vers la liste des livres\r\n     */\n\n\n    onSaveBook() {\n      //Assertion d'assignation car des valeurs par défaut et des Validators.required sont présentes dans le formulaire\n      const title = this.bookForm.get('title').value;\n      const subtitle = this.bookForm.get('subtitle').value;\n      const author = this.bookForm.get('author').value;\n      const synopsis = this.bookForm.get('synopsis').value;\n      const newBook = new Book(title, author, this.booksService.books.entries.length);\n      newBook.synopsis = synopsis;\n      this.booksService.createNewBook(newBook);\n      this.router.navigate(['/books']);\n    }\n    /**\r\n     * Autremplissage du formulaire avec les infos du livre récupéré via l'API google book\r\n     * @param isbn le numéro ISBN du livre à récupérer\r\n     */\n\n\n    autofillBookForm(isbn) {\n      this.googleBookApiService.searchByISBN(isbn).subscribe(googleVolumeListResponse => {\n        var _a; //On ne prend que le premier item de la réponse (items[0]) car searchByISBN(isbn) ne cherche qu'un seul livre\n\n\n        this.bookForm.get('author').setValue(googleVolumeListResponse.items[0].volumeInfo.authors);\n        this.bookForm.get('title').setValue(googleVolumeListResponse.items[0].volumeInfo.title);\n        let parsedSynopsis = googleVolumeListResponse.items[0].volumeInfo.description;\n\n        if (parsedSynopsis) {\n          (_a = this.bookForm.get('synopsis')) === null || _a === void 0 ? void 0 : _a.setValue(parsedSynopsis);\n        }\n      });\n    }\n\n  }\n\n  BookFormComponent.ɵfac = function BookFormComponent_Factory(t) {\n    return new (t || BookFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BooksService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.GoogleBookApiService));\n  };\n\n  BookFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookFormComponent,\n    selectors: [[\"app-book-form\"]],\n    decls: 28,\n    vars: 6,\n    consts: [[1, \"row\"], [1, \"col-sm-8\", \"col-sm-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"author\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"author\", 1, \"form-control\"], [\"for\", \"synopsis\"], [\"id\", \"synopsis\", \"formControlName\", \"synopsis\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"isbn\", \"formControlName\", \"isbn\", 1, \"form-control\", 3, \"value\"], [3, \"formats\", \"delayBetweenScanSuccess\", \"videoConstraints\", \"scanSuccess\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function BookFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Enregistrer un nouveau livre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function BookFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSaveBook();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Titre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Auteur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Synopsis\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"textarea\", 9);\n        i0.ɵɵtext(17, \"          \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelementStart(19, \"label\", 8);\n        i0.ɵɵtext(20, \"ISBN (a rentrer manuellement ou \\u00E0 scanner ci-dessous)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3);\n        i0.ɵɵelementStart(23, \"label\", 8);\n        i0.ɵɵtext(24, \"Scanner de code barre/ISBN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"zxing-scanner\", 11);\n        i0.ɵɵlistener(\"scanSuccess\", function BookFormComponent_Template_zxing_scanner_scanSuccess_25_listener($event) {\n          return ctx.onCodeResult($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 12);\n        i0.ɵɵtext(27, \"Enregistrer \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.scanResult);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formats\", ctx.formatsEnabled)(\"delayBetweenScanSuccess\", ctx.timeBetweenScans)(\"videoConstraints\", ctx.videoConstraints);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.bookForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.ZXingScannerComponent],\n    styles: [\"[_nghost-%COMP%]   zxing-scanner[_ngcontent-%COMP%]  video{max-height:50vh;object-fit:contain}[_nghost-%COMP%]   zxing-scanner[_ngcontent-%COMP%] {border-style:solid;border-color:#5d78ff}\"]\n  });\n  return BookFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}