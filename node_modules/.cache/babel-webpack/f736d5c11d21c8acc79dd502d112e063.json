{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/books.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction BookListComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function BookListComponent_button_5_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onViewBook(i_r2);\n    });\n    i0.ɵɵelementStart(1, \"h3\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function BookListComponent_button_5_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const book_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onDeleteBook(book_r1);\n    });\n    i0.ɵɵelement(4, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const book_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", book_r1.title, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(book_r1.author);\n  }\n}\n/**\r\n * Composant d'affichage de la liste des livres\r\n */\n\n\nexport let BookListComponent = /*#__PURE__*/(() => {\n  class BookListComponent {\n    constructor(booksService, router) {\n      this.booksService = booksService;\n      this.router = router;\n    }\n    /**\r\n     * Initialisation du composant : souscription au service des livres, émission d'un signal de mise à jour\r\n     */\n\n\n    ngOnInit() {\n      this.booksSubscription = this.booksService.booksSubject.subscribe(books => {\n        this.books = books;\n      });\n      this.booksService.emitBooks();\n    }\n    /**\r\n     * Action de routage vers le composant de création de livre\r\n     */\n\n\n    onNewBook() {\n      this.router.navigate(['/books', 'new']);\n    }\n    /**\r\n     * Action de suppression d'un livre\r\n     * @param book le livre à supprimer\r\n     */\n\n\n    onDeleteBook(book) {\n      this.booksService.removeBook(book);\n    }\n    /**\r\n     * Action de routage vers le composant de visualisation d'un livre\r\n     * @param id le livre à visualiser\r\n     */\n\n\n    onViewBook(id) {\n      this.router.navigate(['/books', 'view', id]);\n    }\n    /**\r\n     * Suppression du composant : désinscription au service des livres\r\n     */\n\n\n    ngOnDestroy() {\n      this.booksSubscription.unsubscribe();\n    }\n\n  }\n\n  BookListComponent.ɵfac = function BookListComponent_Factory(t) {\n    return new (t || BookListComponent)(i0.ɵɵdirectiveInject(i1.BooksService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  BookListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookListComponent,\n    selectors: [[\"app-book-list\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"list-group-item\", 3, \"click\"], [1, \"list-group-item-heading\"], [1, \"btn\", \"btn-default\", \"pull-right\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-minus\"], [1, \"list-group-item-text\"]],\n    template: function BookListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Vos livres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, BookListComponent_button_5_Template, 7, 2, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function BookListComponent_Template_button_click_6_listener() {\n          return ctx.onNewBook();\n        });\n        i0.ɵɵtext(7, \"Nouveau livre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.books);\n      }\n    },\n    directives: [i3.NgForOf],\n    encapsulation: 2\n  });\n  return BookListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}